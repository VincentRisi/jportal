DATABASE bbd FLAGS 'user=USId(16)' 'when=TmStamp'//
PACKAGE  bbd
OUTPUT   Scripts
SERVER   bbd

TABLE Scripts

PROC List
INPUT
  VersionType byte
OUTPUT
  Name        char(64)
  Version     short
sqlcode
  select Name, Version from ScriptVersion
  where VersionType = :VersionType
  order by Name, Version
endcode

PROC StaffList
INPUT
  StaffId     char(16)
  VersionType byte
OUTPUT
  Name        char(64)
  Version     short
  AccessType  byte
sqlcode
  select A.ScriptName, V.Version, Min(A.AccessType)
  from ScriptVersion V
  , (select distinct ScriptName, AccessType
     from ScriptGroup
     , (select distinct GroupId
        from StaffGroup
        where StaffId = :StaffId) G
     where G.GroupId = ScriptGroup.GroupId) A
  where V.Name = A.ScriptName
  and   V.VersionType = :VersionType
  group by A.ScriptName, V.Version
  order by 1,2,3
endcode

PROC StaffGroupList
INPUT
  StaffId     char(16)
  GroupId     char(16)
  VersionType byte
OUTPUT
  Name        char(64)
  Version     short
  AccessType  byte
sqlcode
  select SCRIPTG.ScriptName, SCRIPTV.Version, Min(SCRIPTG.AccessType)
  from ScriptVersion SCRIPTV
  , (select distinct ScriptName, AccessType
     from ScriptGroup
     , (select distinct GroupId
        from StaffGroup
        where StaffId = :StaffId
        and (:GroupId = 'ALL' or GroupId = :GroupId)) STAFFG
     where STAFFG.GroupId = ScriptGroup.GroupId) SCRIPTG
  where SCRIPTV.Name = SCRIPTG.ScriptName
  and   SCRIPTV.VersionType = :VersionType
  group by SCRIPTG.ScriptName, SCRIPTV.Version
  order by 1,2,3
endcode

PROC L'Check'
INPUT
  Name        char(64)
  VersionType byte
OUTPUT (Single)
  NoOf        short
sqlcode
  select distinct 1
  from Scripts S, ScriptVersion V
  where S.Name = :Name
  and   V.Name = S.Name
  and   V.VersionType = :VersionType
endcode

PROC Add
INPUT
  InName        char(64)
  InVersionType byte
  InUSId        char(16)
  OutVersion    short
  OutTmstamp    timestamp
sqlcode
  begin
    select to_char(sysdate, 'YYYYMMDDHH24MISS') into :OutTmStamp from dual;
    select nvl(max(Version)+1,1) into :OutVersion from Scripts where Name = :InName;
    delete from ScriptVersion where Name = :InName and VersionType = :InVersionType;
    INSERT INTO ScriptVersion values (:InName, :InVersionType, :OutVersion, 0, :InUsid, to_date(:OutTmStamp, 'YYYYMMDDHH24MISS'));
    delete from Scripts where Name = :InName and Version = :OutVersion;
    INSERT INTO Scripts values (:InName, :InVersionType, :OutVersion, 0, 1, 1, '', :InUsId, to_date(:OutTmStamp, 'YYYYMMDDHH24MISS'));
  end;
endcode

PROC Remove
INPUT
  InName        char(64)
  InVersionType byte
  IOVersion     short
  InUSId        char(16)
  OutTmstamp    timestamp
sqlcode
  begin
    select to_char(sysdate, 'YYYYMMDDHH24MISS') into :OutTmStamp from dual;
    delete from ScriptVersion where Name = :InName and VersionType = :InVersionType;
    delete from Scripts where Name = :InName and Version = :IOVersion;
    select nvl(max(Version),0) into :IOVersion from Scripts
      where Name = :InName and VersionType = :InVersionType;
    if :IOVersion <> 0 then
      insert into ScriptVersion values (:InName, :InVersionType, :IOVersion, 0, :InUsid, to_date(:OutTmStamp, 'YYYYMMDDHH24MISS'));
    endif;
  end;
endcode

PROC Promote
INPUT
  Name           char(64)
  VersionType    byte
  Version        short
  USId           char(16)
  Tmstamp        timestamp
  NewVersion     short
sqlcode
  begin
    select to_char(sysdate, 'YYYYMMDDHH24MISS') into :TmStamp from dual;
    select nvl(max(Version)+1,1) into :NewVersion from Scripts where Name = :Name;
    insert into Scripts
      select Name, VersionType+1, :NewVersion, StoreType, Part, OfParts, Content, :USId, to_date(:TmStamp, 'YYYYMMDDHH24MISS')
        from Scripts where Name = :Name and Version = :Version and VersionType = :VersionType;
    delete from ScriptVersion where Name = :Name and VersionType = :VersionType+1;
    insert into ScriptVersion values (:Name , :VersionType+1, :NewVersion , 0, :USId , to_date(:TmStamp, 'YYYYMMDDHH24MISS'));
  end;
endcode

PROC SaveAs
INPUT
  Name           char(64)
  NewName        char(64)
  VersionType    byte
  Version        short
  USId           char(16)
  Tmstamp        timestamp
sqlcode
  begin
    select to_char(sysdate, 'YYYYMMDDHH24MISS') into :TmStamp from dual;
    insert into Scripts
      select :NewName, VersionType, Version, StoreType, Part, OfParts, Content, :USId, to_date(:TmStamp, 'YYYYMMDDHH24MISS')
        from Scripts where Name = :Name and Version = :Version and VersionType = :VersionType;
    delete from ScriptVersion where Name = :NewName and VersionType = :VersionType;
    insert into ScriptVersion values (:NewName , :VersionType, :Version , 0, :USId , to_date(:TmStamp, 'YYYYMMDDHH24MISS'));
  end;
endcode

PROC Read
INPUT
  Name        char(64)
  StoreType   byte
  VersionType byte
  Version     short
OUTPUT
  Part        short
  OfParts     short
  Content     char(4000)
sqlcode
  select Part, OfParts, Content
  from Scripts
  where Name = :Name
  and StoreType = :StoreType
  and VersionType = :VersionType
  and Version = :Version
  order by Part
endcode

PROC Write
INPUT
  Name        char(64)
  VersionType byte
  Version     short
  StoreType   byte
  Part        short
  OfParts     short
  Content     char(4000)
  USId        char(16)
  Tmstamp     timestamp
sqlcode
  begin
    if :Part = 1 then
      select to_char(sysdate, 'YYYYMMDDHH24MISS') into :TmStamp from dual;
      delete from Scripts
       where Name = :Name
         and VersionType = :VersionType
         and Version = Version
         and StoreType = StoreType;
    endif;
    insert into Scripts values (:Name, :VersionType, :Version, :StoreType,
                                :Part, :OfParts, :Content, :UsId, to_date(:TmStamp, 'YYYYMMDDHH24MISS'));
  end;
endcode

// Used By Router
PROC Load
INPUT
  Name        char(64)
  VersionType byte
  StoreType   byte
OUTPUT
  Version     short
  Part        short
  OfParts     short
  Content     char(4000)
sqlcode
  select
    S.Version
   ,S.Part
   ,S.OfParts
   ,S.Content
  from
     Scripts S, ScriptVersion V
  where
     UPPER(S.Name) = UPPER(:Name)
     and S.StoreType = :StoreType
     and V.VersionType = :VersionType
     and S.Name = V.Name
     and S.Version = V.Version
  order by Part
endcode

// Used By Ide
PROC SetLockStatus
INPUT
  Name        char(64)
  VersionType byte
  IDELock        short
sqlcode
  update ScriptVersion
   set IDELock = :IDELock
   where
     UPPER(Name) = UPPER(:Name) and
     VersionType = :VersionType
endcode

// Used By Ide
PROC GetLockStatusForUpdt
INPUT
  Name        char(64)
  VersionType byte
OUTPUT (Single)
  IDELock     short
sqlcode
  select IDELock from ScriptVersion
   where
     UPPER(Name) = UPPER(:Name) and
     VersionType = :VersionType
   for update
endcode

// Used By Ide
PROC GrabTmStamps
INPUT
  VersionType byte
OUTPUT
  Name        char(64)
  Stamp       DateTime
sqlcode
   select sv.name,to_char(s.tmstamp,'YYYYMMDDHH24MISS') from Scripts s, scriptversion sv
   where
     s.version      = sv.version and
     s.name      = sv.name and
     sv.VersionType = :VersionType and
     s.StoreType    = 0 and
     s.part         = 1
endcode

