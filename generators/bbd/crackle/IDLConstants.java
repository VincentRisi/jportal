/* Generated By:JavaCC: Do not edit this line. IDLConstants.java */
package bbd.crackle;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface IDLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 7;
  /** RegularExpression Id. */
  int QSTRING = 8;
  /** RegularExpression Id. */
  int CHARACTER = 9;
  /** RegularExpression Id. */
  int BOOLEAN = 10;
  /** RegularExpression Id. */
  int BYTE = 11;
  /** RegularExpression Id. */
  int CHAR = 12;
  /** RegularExpression Id. */
  int DOUBLE = 13;
  /** RegularExpression Id. */
  int ENUM = 14;
  /** RegularExpression Id. */
  int FLOAT = 15;
  /** RegularExpression Id. */
  int MODULE = 16;
  /** RegularExpression Id. */
  int PACKAGE = 17;
  /** RegularExpression Id. */
  int INT = 18;
  /** RegularExpression Id. */
  int INT8 = 19;
  /** RegularExpression Id. */
  int INT16 = 20;
  /** RegularExpression Id. */
  int INT32 = 21;
  /** RegularExpression Id. */
  int INT64 = 22;
  /** RegularExpression Id. */
  int LONG = 23;
  /** RegularExpression Id. */
  int MESSAGE = 24;
  /** RegularExpression Id. */
  int SHORT = 25;
  /** RegularExpression Id. */
  int SIZE = 26;
  /** RegularExpression Id. */
  int STRING = 27;
  /** RegularExpression Id. */
  int STRING2 = 28;
  /** RegularExpression Id. */
  int STRUCT = 29;
  /** RegularExpression Id. */
  int TABLE = 30;
  /** RegularExpression Id. */
  int UNSIGNED = 31;
  /** RegularExpression Id. */
  int VERSION = 32;
  /** RegularExpression Id. */
  int VOID = 33;
  /** RegularExpression Id. */
  int WCHAR = 34;
  /** RegularExpression Id. */
  int POINTER = 35;
  /** RegularExpression Id. */
  int POINTERREF = 36;
  /** RegularExpression Id. */
  int INPUT = 37;
  /** RegularExpression Id. */
  int OUTPUT = 38;
  /** RegularExpression Id. */
  int PRIVATE = 39;
  /** RegularExpression Id. */
  int PROTECTED = 40;
  /** RegularExpression Id. */
  int PUBLIC = 41;
  /** RegularExpression Id. */
  int PRAGMA = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int CODE = 46;
  /** RegularExpression Id. */
  int ENDCODE = 47;
  /** RegularExpression Id. */
  int LINENO = 48;
  /** RegularExpression Id. */
  int CODELINE = 49;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int CODESTATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER>",
    "<QSTRING>",
    "<CHARACTER>",
    "<BOOLEAN>",
    "\"byte\"",
    "\"char\"",
    "\"double\"",
    "\"enum\"",
    "\"float\"",
    "\"module\"",
    "\"package\"",
    "\"int\"",
    "\"int8\"",
    "\"int16\"",
    "\"int32\"",
    "\"int64\"",
    "\"long\"",
    "\"message\"",
    "\"short\"",
    "\"size\"",
    "\"string\"",
    "\"String\"",
    "\"struct\"",
    "\"table\"",
    "\"unsigned\"",
    "\"version\"",
    "\"void\"",
    "\"wchar\"",
    "\"*\"",
    "\"*&\"",
    "\"input\"",
    "\"output\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "<PRAGMA>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<CODE>",
    "<ENDCODE>",
    "<LINENO>",
    "<CODELINE>",
    "\";\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\"#\"",
  };

}
