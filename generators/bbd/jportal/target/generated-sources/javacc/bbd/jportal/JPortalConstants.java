/* Generated By:JavaCC: Do not edit this line. JPortalConstants.java */
/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/// Copyright (c) from 1996 Vincent Risi
///
/// All rights reserved.
/// This program and the accompanying materials are made available
/// under the terms of the Common Public License v1.0
/// which accompanies this distribution and is available at
/// http://www.eclipse.org/legal/cpl-v10.html
/// Contributors:
///    Vincent Risi, Hennie Hammann
///    Dieter Rosch
/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
package bbd.jportal;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JPortalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALL = 7;
  /** RegularExpression Id. */
  int ANSICHAR = 8;
  /** RegularExpression Id. */
  int AS = 9;
  /** RegularExpression Id. */
  int AUTOTIMESTAMP = 10;
  /** RegularExpression Id. */
  int BIGIDENTITY = 11;
  /** RegularExpression Id. */
  int BIGSEQUENCE = 12;
  /** RegularExpression Id. */
  int BIGXML = 13;
  /** RegularExpression Id. */
  int BLOB = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int BULKINSERT = 16;
  /** RegularExpression Id. */
  int BULKUPDATE = 17;
  /** RegularExpression Id. */
  int BYTE = 18;
  /** RegularExpression Id. */
  int CALC = 19;
  /** RegularExpression Id. */
  int CASCADE = 20;
  /** RegularExpression Id. */
  int CHAR = 21;
  /** RegularExpression Id. */
  int CHECK = 22;
  /** RegularExpression Id. */
  int COUNT = 23;
  /** RegularExpression Id. */
  int CONST = 24;
  /** RegularExpression Id. */
  int CURSOR = 25;
  /** RegularExpression Id. */
  int DATABASE = 26;
  /** RegularExpression Id. */
  int DATE = 27;
  /** RegularExpression Id. */
  int DATETIME = 28;
  /** RegularExpression Id. */
  int DECLARE = 29;
  /** RegularExpression Id. */
  int DEFAULTV = 30;
  /** RegularExpression Id. */
  int DELETE = 31;
  /** RegularExpression Id. */
  int DELETEBY = 32;
  /** RegularExpression Id. */
  int DELETEALL = 33;
  /** RegularExpression Id. */
  int DELETEONE = 34;
  /** RegularExpression Id. */
  int DESC = 35;
  /** RegularExpression Id. */
  int DOUBLE = 36;
  /** RegularExpression Id. */
  int DYNAMIC = 37;
  /** RegularExpression Id. */
  int EXECUTE = 38;
  /** RegularExpression Id. */
  int EXISTS = 39;
  /** RegularExpression Id. */
  int FLAGS = 40;
  /** RegularExpression Id. */
  int FLOAT = 41;
  /** RegularExpression Id. */
  int FOR = 42;
  /** RegularExpression Id. */
  int GRANT = 43;
  /** RegularExpression Id. */
  int IDENTITY = 44;
  /** RegularExpression Id. */
  int IMPORT = 45;
  /** RegularExpression Id. */
  int IN = 46;
  /** RegularExpression Id. */
  int INOUT = 47;
  /** RegularExpression Id. */
  int INPUT = 48;
  /** RegularExpression Id. */
  int INSERT = 49;
  /** RegularExpression Id. */
  int INT = 50;
  /** RegularExpression Id. */
  int KEY = 51;
  /** RegularExpression Id. */
  int LINK = 52;
  /** RegularExpression Id. */
  int LONG = 53;
  /** RegularExpression Id. */
  int MERGE = 54;
  /** RegularExpression Id. */
  int MONEY = 55;
  /** RegularExpression Id. */
  int MULTIPLE = 56;
  /** RegularExpression Id. */
  int NAMES = 57;
  /** RegularExpression Id. */
  int NOT = 58;
  /** RegularExpression Id. */
  int NULL = 59;
  /** RegularExpression Id. */
  int OPTIONS = 60;
  /** RegularExpression Id. */
  int ORDER = 61;
  /** RegularExpression Id. */
  int OUTPUT = 62;
  /** RegularExpression Id. */
  int PACKAGE = 63;
  /** RegularExpression Id. */
  int PASSWORD = 64;
  /** RegularExpression Id. */
  int PRIMARY = 65;
  /** RegularExpression Id. */
  int PROC = 66;
  /** RegularExpression Id. */
  int READONLY = 67;
  /** RegularExpression Id. */
  int RETURNING = 68;
  /** RegularExpression Id. */
  int SCHEMA = 69;
  /** RegularExpression Id. */
  int SELECT = 70;
  /** RegularExpression Id. */
  int SELECTALL = 71;
  /** RegularExpression Id. */
  int SELECTBY = 72;
  /** RegularExpression Id. */
  int FROM = 73;
  /** RegularExpression Id. */
  int WHERE = 74;
  /** RegularExpression Id. */
  int SELECTONEBY = 75;
  /** RegularExpression Id. */
  int SELECTONE = 76;
  /** RegularExpression Id. */
  int SEQUENCE = 77;
  /** RegularExpression Id. */
  int SERVER = 78;
  /** RegularExpression Id. */
  int SHORT = 79;
  /** RegularExpression Id. */
  int SINGLE = 80;
  /** RegularExpression Id. */
  int SQL = 81;
  /** RegularExpression Id. */
  int SPROC = 82;
  /** RegularExpression Id. */
  int STANDARD = 83;
  /** RegularExpression Id. */
  int TABLE = 84;
  /** RegularExpression Id. */
  int TIME = 85;
  /** RegularExpression Id. */
  int TIMESTAMP = 86;
  /** RegularExpression Id. */
  int TLOB = 87;
  /** RegularExpression Id. */
  int TO = 88;
  /** RegularExpression Id. */
  int UID = 89;
  /** RegularExpression Id. */
  int UNIQUE = 90;
  /** RegularExpression Id. */
  int UPDATE = 91;
  /** RegularExpression Id. */
  int UPDATEFOR = 92;
  /** RegularExpression Id. */
  int UPDATEBY = 93;
  /** RegularExpression Id. */
  int MAXTMSTAMP = 94;
  /** RegularExpression Id. */
  int USERID = 95;
  /** RegularExpression Id. */
  int USERSTAMP = 96;
  /** RegularExpression Id. */
  int UTF8 = 97;
  /** RegularExpression Id. */
  int VIEW = 98;
  /** RegularExpression Id. */
  int WANSICHAR = 99;
  /** RegularExpression Id. */
  int WCHAR = 100;
  /** RegularExpression Id. */
  int XML = 101;
  /** RegularExpression Id. */
  int PARM = 102;
  /** RegularExpression Id. */
  int PARMSHOWS = 103;
  /** RegularExpression Id. */
  int PARMVIEWONLY = 104;
  /** RegularExpression Id. */
  int PARMCACHE = 105;
  /** RegularExpression Id. */
  int PARMREADER = 106;
  /** RegularExpression Id. */
  int PARMINSERT = 107;
  /** RegularExpression Id. */
  int PARMDELETE = 108;
  /** RegularExpression Id. */
  int PARMUPDATE = 109;
  /** RegularExpression Id. */
  int PARMSUPPLIED = 110;
  /** RegularExpression Id. */
  int CODE = 111;
  /** RegularExpression Id. */
  int DATA = 112;
  /** RegularExpression Id. */
  int ENDCODE = 113;
  /** RegularExpression Id. */
  int ENDDATA = 114;
  /** RegularExpression Id. */
  int COMMENT = 115;
  /** RegularExpression Id. */
  int ATSIGN = 116;
  /** RegularExpression Id. */
  int COLON = 117;
  /** RegularExpression Id. */
  int COMMA = 118;
  /** RegularExpression Id. */
  int EQUALS = 119;
  /** RegularExpression Id. */
  int LEFTBRACE = 120;
  /** RegularExpression Id. */
  int LEFTBRACK = 121;
  /** RegularExpression Id. */
  int LEFTPAREN = 122;
  /** RegularExpression Id. */
  int RIGHTBRACE = 123;
  /** RegularExpression Id. */
  int RIGHTBRACK = 124;
  /** RegularExpression Id. */
  int RIGHTPAREN = 125;
  /** RegularExpression Id. */
  int SEMICOLON = 126;
  /** RegularExpression Id. */
  int NUMBER = 127;
  /** RegularExpression Id. */
  int STRING = 128;
  /** RegularExpression Id. */
  int DQUOTEDS = 129;
  /** RegularExpression Id. */
  int SQUOTEDS = 130;
  /** RegularExpression Id. */
  int IDENTIFIER = 131;
  /** RegularExpression Id. */
  int LIDENTIFIER = 132;
  /** RegularExpression Id. */
  int LETTER = 133;
  /** RegularExpression Id. */
  int DIGIT = 134;
  /** RegularExpression Id. */
  int EXTRA = 135;
  /** RegularExpression Id. */
  int LITERAL = 136;
  /** RegularExpression Id. */
  int SQLCODE = 137;
  /** RegularExpression Id. */
  int ENDSQLCODE = 138;
  /** RegularExpression Id. */
  int CODELINE = 139;
  /** RegularExpression Id. */
  int SQLDATA = 140;
  /** RegularExpression Id. */
  int ENDSQLDATA = 141;
  /** RegularExpression Id. */
  int DATALINE = 142;
  /** RegularExpression Id. */
  int IDLCODE = 143;
  /** RegularExpression Id. */
  int ENDIDLCODE = 144;
  /** RegularExpression Id. */
  int IDLLINE = 145;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int CODESTATE = 1;
  /** Lexical state. */
  int DATASTATE = 2;
  /** Lexical state. */
  int IDLSTATE = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"all\"",
    "<ANSICHAR>",
    "\"as\"",
    "\"autotimestamp\"",
    "\"bigidentity\"",
    "\"bigsequence\"",
    "\"bigxml\"",
    "\"blob\"",
    "<BOOLEAN>",
    "\"bulkinsert\"",
    "\"bulkupdate\"",
    "\"byte\"",
    "\"calc\"",
    "\"cascade\"",
    "\"char\"",
    "\"check\"",
    "\"count\"",
    "<CONST>",
    "\"cursor\"",
    "\"database\"",
    "\"date\"",
    "\"datetime\"",
    "\"declare\"",
    "\"default\"",
    "\"delete\"",
    "\"deleteby\"",
    "\"deleteall\"",
    "\"deleteone\"",
    "\"desc\"",
    "\"double\"",
    "\"dynamic\"",
    "\"execute\"",
    "\"exists\"",
    "\"flags\"",
    "\"float\"",
    "\"for\"",
    "\"grant\"",
    "\"identity\"",
    "\"import\"",
    "\"in\"",
    "\"inout\"",
    "\"input\"",
    "\"insert\"",
    "<INT>",
    "\"key\"",
    "\"link\"",
    "\"long\"",
    "\"merge\"",
    "\"money\"",
    "\"multiple\"",
    "\"names\"",
    "\"not\"",
    "\"null\"",
    "\"options\"",
    "<ORDER>",
    "\"output\"",
    "\"package\"",
    "\"password\"",
    "\"primary\"",
    "\"proc\"",
    "\"readonly\"",
    "\"returning\"",
    "\"schema\"",
    "\"select\"",
    "\"selectall\"",
    "\"selectby\"",
    "\"from\"",
    "\"where\"",
    "\"selectoneby\"",
    "\"selectone\"",
    "\"sequence\"",
    "\"server\"",
    "\"short\"",
    "\"single\"",
    "\"sql\"",
    "<SPROC>",
    "\"standard\"",
    "\"table\"",
    "\"time\"",
    "\"timestamp\"",
    "<TLOB>",
    "\"to\"",
    "\"uid\"",
    "\"unique\"",
    "\"update\"",
    "\"updatefor\"",
    "\"updateby\"",
    "\"maxtmstamp\"",
    "\"userid\"",
    "\"userstamp\"",
    "\"utf8\"",
    "\"view\"",
    "<WANSICHAR>",
    "\"wchar\"",
    "\"xml\"",
    "\"{parm}\"",
    "\"{shows}\"",
    "\"{viewonly}\"",
    "\"{cache}\"",
    "\"{reader}\"",
    "\"{insert}\"",
    "\"{delete}\"",
    "\"{update}\"",
    "\"{supplied}\"",
    "\"code\"",
    "\"data\"",
    "\"endcode\"",
    "\"enddata\"",
    "<COMMENT>",
    "\"@\"",
    "\":\"",
    "\",\"",
    "\"=\"",
    "\"{\"",
    "\"[\"",
    "\"(\"",
    "\"}\"",
    "\"]\"",
    "\")\"",
    "\";\"",
    "<NUMBER>",
    "<STRING>",
    "<DQUOTEDS>",
    "<SQUOTEDS>",
    "<IDENTIFIER>",
    "<LIDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<EXTRA>",
    "<LITERAL>",
    "<SQLCODE>",
    "<ENDSQLCODE>",
    "<CODELINE>",
    "<SQLDATA>",
    "<ENDSQLDATA>",
    "<DATALINE>",
    "<IDLCODE>",
    "<ENDIDLCODE>",
    "<IDLLINE>",
    "\".\"",
  };

}
